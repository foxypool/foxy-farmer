on:
  push:
    tags:
      - '**'
    branches:
      - main
  pull_request:
name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-and-push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Dockerhub Container registry
        uses: docker/login-action@v3
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build:
    name: Build binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.11"
            os: ubuntu-20.04
            package-suffix: ubuntu-20.04
          - python-version: "3.11"
            os: ubuntu-latest
            package-suffix: ubuntu
          - python-version: "3.11"
            os: macos-latest
            package-suffix: macos
          - python-version: "3.11"
            os: windows-latest
            package-suffix: windows

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev] --extra-index-url https://pypi.chia.net/simple/
      - name: Build binary
        run: pyinstaller foxy_farmer.spec
      - name: Include powershell harvester scripts
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          copy make_harvester_installer.ps1 dist
          copy run_harvester.ps1 dist
      - name: Save release archive
        uses: actions/upload-artifact@v4
        with:
          name: foxy-farmer-${{ matrix.package-suffix }}
          path: dist/*
  publish-release:
    name: Publish release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Fetch release archives
        uses: actions/download-artifact@v4
      - name: Mark binary as executable
        run: |
          chmod +x foxy-farmer-ubuntu-20.04/foxy-farmer
          chmod +x foxy-farmer-ubuntu/foxy-farmer
          chmod +x foxy-farmer-macos/foxy-farmer
      - name: Create release zip
        run:
          for i in foxy-farmer-*/; do zip -r -j "${i%/}.zip" "$i"; done
      - name: Get the tag name
        id: tag
        run: echo TAG=${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag.outputs.TAG }}
          path: ./CHANGELOG.md
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "foxy-farmer-*.zip"
          name: "Foxy-Farmer v${{ steps.tag.outputs.TAG }}"
          body: ${{ steps.changelog_reader.outputs.changes }}
